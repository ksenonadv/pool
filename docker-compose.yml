services:
  database:
    image: postgres:17
    environment:
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USERNAME"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - internal

  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    depends_on:
      - database

    environment:
      JWT_REFRESH_SECRET:
      JWT_ACCESS_SECRET:
      DB_HOST:
      DB_PORT:
      DB_NAME:
      DB_USERNAME:
      DB_PASSWORD:
      DISCORD_CLIENT_ID:
      DISCORD_CLIENT_SECRET:
      DISCORD_CALLBACK_URL:
      IMGUR_CLIENT_ID:
      MAX_REQUEST_SIZE:
      FRONTEND_URL:
      BACKEND_URL:
    networks:
      - internal

  frontend:
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    environment:
      BACKEND_URL:
    networks:
      - internal

  proxy:
    image: nginx:latest
    container_name: nginx-reverse-proxy
    ports:
      - "80:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    networks:
      - internal
      - default

networks:
  internal:
    driver: bridge